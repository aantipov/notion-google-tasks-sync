---
import Layout from '@/layouts/Layout.astro';
import Hero from '@/components/Hero/Hero.astro';
import Main from '@/components/Main.tsx';
import type { KVDataT } from '@/types';
import { decodeJWTTokens } from '@/helpers/decodeJWTTokens';

export const prerender = false;

// Check if user has authenticated
const { NOTION_GTASKS_KV, JWT_SECRET } = Astro.locals.runtime.env;
const gJwtToken = Astro.cookies.get('gtoken')?.value;
const nJwtToken = Astro.cookies.get('ntoken')?.value;
let kvData: KVDataT | null = null;
// TODO: verify permissions
const { gToken, nToken } = await decodeJWTTokens(
	gJwtToken,
	nJwtToken,
	JWT_SECRET,
);
let isUserLoggedIn = !!gToken;

// Handle Tokens: Save to KV if not present
if (gToken) {
	const userEmail = gToken.user.email;
	try {
		kvData = (await NOTION_GTASKS_KV.get(userEmail, {
			type: 'json',
		})) as KVDataT;
		if (!kvData) {
			// set KV data
			kvData = {
				gToken,
				...(nToken && { nToken }),
				created: new Date().toISOString(),
				modified: new Date().toISOString(),
			} as KVDataT;
			await NOTION_GTASKS_KV.put(userEmail, JSON.stringify(kvData));
		} else {
			// Update KV Data if it misses nToken
			kvData.gToken = gToken;
			if (nToken) {
				kvData.nToken = nToken;
			}
			kvData.modified = new Date().toISOString();
			await NOTION_GTASKS_KV.put(userEmail, JSON.stringify(kvData));
		}
	} catch (error) {
		console.error('ERROR', error);
		kvData = null;
		isUserLoggedIn = false;
	}
}
const isNotionConnected = !!kvData?.nToken;
---

<Layout>
	<div class="container mx-auto mt-20 p-8">
		<Hero />
	</div>
	<!-- <Main
			client:load
			isUserLoggedIn={isUserLoggedIn}
			isNotionConnected={isNotionConnected}
			tasklistId={kvData?.tasksListId}
			databaseId={kvData?.databaseId}
		/> -->
	<footer class="flex h-32 items-center justify-center bg-slate-800 text-white">
		Made by &nbsp;<a href="https://alexei.me" class="underline"
			>Alexey Antipov</a
		>
	</footer>
</Layout>

<style></style>
